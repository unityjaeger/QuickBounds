"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[976],{2053:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"intro","title":"Intro","description":"Overview","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/QuickBounds/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/unityjaeger/QuickBounds/edit/main/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"defaultSidebar","next":{"title":"Usage","permalink":"/QuickBounds/docs/usage"}}');var i=t(4848),o=t(8453);const s={sidebar_position:1},a="Intro",c={},d=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Quick Start",id:"quick-start",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"intro",children:"Intro"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"QuickBounds is a spatial partitioning system for Roblox that efficiently detects when objects enter or exit defined zones. It uses a Bounding Volume Hierarchy with Morton Codes for optimized spatial queries, making it suitable for large-scale applications."}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.p,{children:["Just grab the latest release from the ",(0,i.jsx)(n.a,{href:"https://github.com/unityjaeger/QuickBounds/releases",children:"Releases"})," tab."]}),"\n",(0,i.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'--create a zone\r\nlocal zone = QuickBounds.addFromInstance(workspace.MyZonePart)\r\nzone.watchGroups("Players")  --make this zone watch any object with the "Players" group\r\n\r\nQuickBounds.onEntered("Players", function(_, player)\r\n    print(player.Name .. " entered the zone!")\r\nend)\r\n\r\nQuickBounds.onExited("Players", function(_, player)\r\n    print(player.Name .. " exited the zone!")\r\nend)\r\n\r\n--rebuild the BVH tree, needed after structural changes\r\nQuickBounds.rebuild()\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(6540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);