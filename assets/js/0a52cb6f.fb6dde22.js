"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[572],{3966:e=>{e.exports=JSON.parse('{"functions":[{"name":"add","desc":"Requires a rebuild for the zone to start working as intended.","params":[{"name":"cframe","desc":"","lua_type":"CFrame"},{"name":"size","desc":"","lua_type":"Vector3"},{"name":"shape","desc":"","lua_type":"\\"Box\\" | \\"Cylinder\\" | \\"Sphere\\""}],"returns":[{"desc":"","lua_type":"Zone"}],"function_type":"static","source":{"line":427,"path":"src/main.luau"}},{"name":"addFromInstance","desc":"Requires a rebuild for the zone to start working as intended.","params":[{"name":"part","desc":"","lua_type":"BasePart"}],"returns":[{"desc":"","lua_type":"Zone"}],"function_type":"static","source":{"line":478,"path":"src/main.luau"}},{"name":"assignToGroup","desc":"Associates a BasePart with a group, if callbackData is specified, then it is specific to that group.","params":[{"name":"group","desc":"","lua_type":"string"},{"name":"part","desc":"","lua_type":"BasePart"},{"name":"callbackData","desc":"optional data to pass to callbacks","lua_type":"any?"}],"returns":[],"function_type":"static","source":{"line":508,"path":"src/main.luau"}},{"name":"removeFromGroup","desc":"Removes a BasePart from a group, if the BasePart is not a member of any group after this operation, it gets cleaned up.","params":[{"name":"group","desc":"","lua_type":"string"},{"name":"part","desc":"","lua_type":"BasePart"}],"returns":[],"function_type":"static","source":{"line":534,"path":"src/main.luau"}},{"name":"onEntered","desc":"```lua\\n--parts internally registered to the \\"Players\\" group pass the Player object as the second argument in the callback\\nQuickBounds.onEntered(\\"Players\\", function(_, player)\\n    print(player.Name .. \\" entered a zone!\\")\\nend)\\n```","params":[{"name":"group","desc":"","lua_type":"Groups"},{"name":"callback","desc":"","lua_type":"function"}],"returns":[{"desc":"a function that if called will disconnect the callback","lua_type":"() -> ()"}],"function_type":"static","source":{"line":560,"path":"src/main.luau"}},{"name":"onExited","desc":"```lua\\n--parts internally registered to the \\"Players\\" group pass the Player object as the second argument in the callback\\nQuickBounds.onExited(\\"Players\\", function(_, player)\\n    print(player.Name .. \\" exited a zone!\\")\\nend)\\n```","params":[{"name":"group","desc":"","lua_type":"Groups"},{"name":"callback","desc":"","lua_type":"function"}],"returns":[{"desc":"a function that if called will disconnect the callback","lua_type":"() -> ()"}],"function_type":"static","source":{"line":591,"path":"src/main.luau"}},{"name":"setFrameBudgetMs","desc":"Set the target frame budget in milliseconds.","params":[{"name":"budget","desc":"","lua_type":"number"}],"returns":[],"function_type":"static","source":{"line":615,"path":"src/main.luau"}},{"name":"getGroupsForPart","desc":"Get all groups that the part is inside of.","params":[{"name":"part","desc":"","lua_type":"BasePart"}],"returns":[{"desc":"","lua_type":"{Groups}"}],"function_type":"static","source":{"line":627,"path":"src/main.luau"}},{"name":"isPartInGroup","desc":"Checks whether a part is inside of a certain group.","params":[{"name":"part","desc":"","lua_type":"BasePart"},{"name":"group","desc":"","lua_type":"Groups"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":651,"path":"src/main.luau"}},{"name":"getPartsForGroup","desc":"Get all parts that the group contains.","params":[{"name":"group","desc":"","lua_type":"Groups"}],"returns":[{"desc":"","lua_type":"{BasePart}"}],"function_type":"static","source":{"line":669,"path":"src/main.luau"}},{"name":"getAllZonesForGroup","desc":"Get all zone objects that are part of a group.","params":[{"name":"group","desc":"","lua_type":"Groups"}],"returns":[{"desc":"","lua_type":"{BoundingVolume}"}],"function_type":"static","source":{"line":689,"path":"src/main.luau"}},{"name":"getCustomPartData","desc":"Get the custom part data associated with a group.","params":[{"name":"part","desc":"","lua_type":"BasePart"},{"name":"group","desc":"","lua_type":"Groups"}],"returns":[{"desc":"","lua_type":"any?"}],"function_type":"static","source":{"line":708,"path":"src/main.luau"}}],"properties":[],"types":[{"name":"BoundingVolume","desc":"Internal object that the BVH interacts with, only ever exposed through getAllZonesForGroup.\\nRadius is only used for balls and axis, axisLength and radiusSquared are all used for cylinders.","fields":[{"name":"Shape","lua_type":"\\"Box\\" | \\"Ball\\" | \\"Cylinder\\",","desc":""},{"name":"Position","lua_type":"Vector3,","desc":""},{"name":"CFrame","lua_type":"CFrame,","desc":""},{"name":"HalfSize","lua_type":"Vector3,","desc":""},{"name":"Part","lua_type":"BasePart?,","desc":""},{"name":"radius","lua_type":"number?,","desc":""},{"name":"start","lua_type":"Vector3?,","desc":""},{"name":"axis","lua_type":"Vector3?,","desc":""},{"name":"axisLength","lua_type":"number?,","desc":""},{"name":"radiusSquared","lua_type":"number?","desc":""}],"source":{"line":35,"path":"src/main.luau"}},{"name":"Groups","desc":"","lua_type":"\\"Players\\" | string","source":{"line":255,"path":"src/main.luau"}}],"name":"QuickBounds","desc":"","source":{"line":270,"path":"src/main.luau"}}')}}]);