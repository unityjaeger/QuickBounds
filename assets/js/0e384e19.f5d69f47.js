"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[976],{7879:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"intro","title":"Intro","description":"Overview","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/QuickBounds/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/unityjaeger/QuickBounds/edit/main/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"defaultSidebar","next":{"title":"Usage","permalink":"/QuickBounds/docs/usage"}}');var o=n(4848),a=n(8453);const i={sidebar_position:1},s="Intro",c={},d=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Quick Start",id:"quick-start",level:2}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"intro",children:"Intro"})}),"\n",(0,o.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(t.p,{children:"QuickBounds is a spatial detection module to track BaseParts moving in and out of predefined areas in the world.\r\nIt uses a Bounding Volume Hierarchy under the hood to minimize the costs of tracking these BaseParts."}),"\n",(0,o.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(t.p,{children:"For both pesde and wally, the package name + version is"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"unityjaeger/quickbounds@0.3.1\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Or if you want the source, then just grab it from the latest release from the ",(0,o.jsx)(t.a,{href:"https://github.com/unityjaeger/QuickBounds/releases",children:"Releases"})," tab."]}),"\n",(0,o.jsx)(t.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-lua",children:'--create a group (optionally with a priority)\r\nlocal group = QuickBounds.createGroup(10) --lower priority groups get prioritized\r\n\r\n--add a basepart to the group to be tracked (optionally with custom data)\r\ngroup:add(workspace.ExamplePart, "custom data")\r\n\r\n--create a zone\r\nlocal zone = QuickBounds.createZoneFromInstance(workspace.ExampleZonePart)\r\n\r\n--make the zone start watching the example group\r\nzone:watchGroups(group)\r\n\r\n--register callbacks for zone entering/exiting\r\ngroup:onEntered(function(part, zone, customData)\r\n    --if the zone was registered with createZoneFromInstance then zone.part will be the Instance passed to that function,  otherwise it will be nil\r\n    print(part, "entered", zone.part, "with custom data", customData)\r\nend)\r\n\r\ngroup:onExited(function(part, zone, customData)\r\n    --if the zone was registered with createZoneFromInstance then zone.part will be the Instance passed to that function, otherwise it will be nil\r\n    print(part, "exited", zone.part, "with custom data", customData)\r\nend)\n'})})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var r=n(6540);const o={},a=r.createContext(o);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);